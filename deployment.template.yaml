kind: Namespace
apiVersion: v1
metadata:
  name: notes
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: notes-app-pv
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /mnt/storage/k3s-apps/notes
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: notes-app-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: notes-db-pv
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /mnt/storage/k3s-data/notes
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: notes-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 100Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: notes
  labels:
    app: traefiklabs
    name: notes

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefiklabs
      task: task
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: traefiklabs
        task: task
    spec:
      containers:
        - name: api
          image: localhost:5000/notes:latest
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: db-files-volume
              mountPath: /data
          env:
            - name: ENCRYPTION_BCRYPT_COST
              value: '3'
          envFrom:
            - secretRef:
                name: notes-secrets
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            failureThreshold: 30
            periodSeconds: 10

        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - name: app-files-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.prod.conf

      volumes:
        - name: app-files-volume
          persistentVolumeClaim:
            claimName: notes-app-pvc
        - name: db-files-volume
          persistentVolumeClaim:
            claimName: notes-db-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: notes-nginx

spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: traefiklabs
    task: task
---
kind: Service
apiVersion: v1
metadata:
  name: notes-api

spec:
  ports:
    - name: http
      port: 8000
      targetPort: 8000
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: notes-ingress
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: traefikresolver

spec:
  rules:
    - host: notes.willhy.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: notes-nginx
                port:
                  number: 80
